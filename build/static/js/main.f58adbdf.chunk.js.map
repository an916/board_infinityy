{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","taskName","setTask","taskDescription","setDesc","creator","setCreat","duration","setDura","list","setList","className","placeholder","id","type","class","onChange","e","target","value","style","width","marginRight","name","onClick","fetch","method","headers","body","JSON","stringify","then","res","json","a","data","console","log","length","map","createdAt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAuGeA,MApGf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACIC,EADJ,OAEsBF,mBAAS,IAF/B,mBAENG,EAFM,KAEWC,EAFX,OAGeJ,mBAAS,IAHxB,mBAGNK,EAHM,KAGGC,EAHH,OAIeN,mBAAS,IAJxB,mBAINO,EAJM,KAIIC,EAJJ,OAKUR,mBAAS,IALnB,mBAKNS,EALM,KAKDC,EALC,KAUb,OACE,sBAAKC,UAAU,MAAf,UACA,mCACA,uBAAOC,YAAY,YAAYC,GAAG,aAAaC,KAAK,OAAOC,MAAM,WAAWC,SAAY,SAACC,GAAKf,EAAQe,EAAEC,OAAOC,QAASC,MAAO,CAACC,MAAM,WAAY,uBAClJ,uBAAOT,YAAY,YAAYC,GAAG,aAAaC,KAAK,OAAOC,MAAM,WAAYC,SAAY,SAACC,GAAKb,EAAQa,EAAEC,OAAOC,QAASC,MAAO,CAACC,MAAM,WAAY,uBACnJ,uBAAOT,YAAY,YAAYC,GAAG,aAAaC,KAAK,OAAOC,MAAM,WAAaC,SAAY,SAACC,GAAKX,EAASW,EAAEC,OAAOC,QAASC,MAAO,CAACC,MAAM,WAAY,uBACrJ,uBAAOT,YAAY,YAAYC,GAAG,aAAaC,KAAK,OAAOC,MAAM,WAAYC,SAAY,SAACC,GAAKT,EAAQS,EAAEC,OAAOC,QAASC,MAAO,CAACC,MAAM,WAAY,uBACnJ,wBAAQN,MAAM,+BAA+BK,MAAO,CAACE,YAAY,QAASR,KAAK,SAASS,KAAK,SAASC,QACpG,WACEC,MAAM,OAAO,CACXC,OAAS,OACTC,QAAQ,CACN,eAAiB,oBAEnBC,KAAKC,KAAKC,UACR,CACE7B,WACAE,kBACAE,UACAE,eAGHwB,MAAK,SAAAC,GAAG,OAAGA,EAAIC,WAftB,oBAsBA,wBAAQlB,MAAM,+BAA+BD,KAAK,SAASS,KAAK,SAASC,QAAO,sBAC9E,sBAAAU,EAAA,sDACET,MAAM,QAAQ,IACXM,KADH,uCACQ,WAAMC,GAAN,eAAAE,EAAA,sEACWF,EAAIC,OADf,OACFE,EADE,OAGNzB,EAAQyB,GAERC,QAAQC,IAAIR,KAAKC,UAAUrB,IALrB,2CADR,uDADF,2CADF,qBAiBA,uBACA,iCACA,wBAAOW,MAAO,CAACC,MAAM,OAArB,UACA,gCACM,+BACI,2CACA,kDACA,0CACA,0CACA,iDAKQ,IAAhBZ,EAAK6B,OACL7B,EAAK8B,KAAI,SAAAtB,GACP,OAEA,gCACE,+BACI,6BAAKA,EAAEhB,WACP,6BAAKgB,EAAEd,kBACP,6BAAKc,EAAEZ,UACP,6BAAKY,EAAEV,WACP,6BAAKU,EAAEuB,oBAOZ,cC9EMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f58adbdf.chunk.js","sourcesContent":["import React,{useState} from \"react\"\nimport 'materialize-css'\n\nfunction App() {\n  const [taskName, setTask] = useState(\"\")\n  const [taskDescription, setDesc] = useState(\"\")\n  const [creator, setCreat] = useState(\"\")\n  const [duration, setDura] = useState(\"\")\n  const [list,setList] = useState([])\n\n\n\n\n  return (\n    <div className=\"App\">\n    <center>\n    <input placeholder=\"Task Name\" id=\"first_name\" type=\"text\" class=\"validate\" onChange = {(e)=>{setTask(e.target.value)}} style={{width:\"500px\"}} /><br />\n    <input placeholder=\"Task Name\" id=\"first_name\" type=\"text\" class=\"validate\"  onChange = {(e)=>{setDesc(e.target.value)}} style={{width:\"500px\"}} /><br />\n    <input placeholder=\"Task Name\" id=\"first_name\" type=\"text\" class=\"validate\"   onChange = {(e)=>{setCreat(e.target.value)}} style={{width:\"500px\"}} /><br />\n    <input placeholder=\"Task Name\" id=\"first_name\" type=\"text\" class=\"validate\"  onChange = {(e)=>{setDura(e.target.value)}} style={{width:\"500px\"}} /><br />\n    <button class=\"btn waves-effect waves-light\" style={{marginRight:\"10px\"}} type=\"submit\" name=\"action\" onClick={\n      ()=>{\n        fetch('/add',{\n          method : \"post\",\n          headers:{\n            \"Content-type\" : \"application/json\"\n          },\n          body:JSON.stringify(\n            {\n              taskName,\n              taskDescription,\n              creator,\n              duration\n            }\n          )\n        }).then(res=> res.json())\n\n      }\n    }\n     >Submit\n\n    </button>\n    <button class=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\" onClick={\n      async()=>{\n        fetch('/list',{\n        }).then(async res=>{\n          let data = await res.json()\n          // console.log(data.)\n          setList(data)\n\n          console.log(JSON.stringify(list));\n        })\n\n      }\n    }\n     >List\n\n    </button>\n    </center>\n    <br />\n    <center>\n    <table style={{width:\"80%\"}}>\n    <thead>\n          <tr>\n              <th>Task Name</th>\n              <th>Task Description</th>\n              <th>Creator </th>\n              <th>Duration</th>\n              <th>Created At</th>\n\n          </tr>\n        </thead>\n    {\n      list.length !== 0?\n      list.map(e=>{\n        return (\n\n        <tbody>\n          <tr>\n              <td>{e.taskName}</td>\n              <td>{e.taskDescription}</td>\n              <td>{e.creator}</td>\n              <td>{e.duration}</td>\n              <td>{e.createdAt}</td>\n\n\n          </tr>\n        </tbody>\n\n        )\n      }):null\n    }\n    </table>\n    </center>\n    </div>\n\n\n\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}